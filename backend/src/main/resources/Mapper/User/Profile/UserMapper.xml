<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="moim.renew.backend.domain.User.UserMain.Mapper.UserMapper">

    <!--  user Entity와 user Table 간 매핑  -->
    <resultMap id="userResultMap" type="UserEntity">
        <id     property="userId"    column="userId"/>
        <result property="password" column="Password"/>
        <result property="nickname" column="Nickname"/>
        <result property="intro" column="Intro"/>
        <result property="review" column="Review"/>
        <result property="provider" column="Provider"/>
        <result property="profileImg" column="Profileimg"/>
        <result property="birthDay" column="Birthday"/>
        <result property="gender" column="Gender"/>
        <result property="type" column="Type"/>
        <result property="address" column="Address"/>
        <result property="addressDetail" column="AddressDetail"/>
        <result property="interests" column="Interests"/>
    </resultMap>

    <!-- 유저 정보 생성   -->
    <insert id="InsertUser" parameterType="UserEntity">
        INSERT INTO users(userId, "Password", Nickname, Intro, Review, Provider,Profileimg,Birthday,Gender, "Type", Address, AddressDetail, Interests   )
        VALUES(#{userId}, #{password}, #{nickname}, #{intro}, #{review}, #{provider},
        #{profileImg}, #{birthDay}, #{gender}, #{type}, #{address}, #{addressDetail}, #{interests})
    </insert>

    <!-- 유저 정보 업데이트  -->
    <update id="UpdateUser" parameterType="UserEntity">
        UPDATE users
        SET "Password" = #{password}, nickname = #{nickname}, review = #{review}, Intro = #{Intro}, Profileimg = #{profileImg},
        Birthday = #{birthDay}, Gender = #{gender}, "Type" = #{type}, Address = #{address}, AddressDetail = #{addressDetail}, Interests = #{interests}
        WHERE userId = #{userId}
    </update>

    <!-- 유저 정보 삭제   -->
    <delete id="DeleteUser" parameterType="UserEntity">
        DELETE FROM users WHERE userId = #{userId} AND "Password" = #{password}
    </delete>

    <!-- 유저 비밀번호 업데이트   -->
    <update id="UpdatePasswordByEmail" parameterType="UserEntity">
        UPDATE users
        SET "Password" = #{password}
        WHERE userId = #{userId}
    </update>

    <!--  User  Id의 존재 여부 확인  -->
    <select id="getUserID" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM users WHERE userId = #{userId}
    </select>
    <!--  Nickname의 존재 여부 확인  -->
    <select id="getNickname" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM users WHERE Nickname = #{nickname}
    </select>
        <!--    user 정보 찾기-->
    <select id="FindUserID" parameterType="java.lang.String" resultType="UserEntity">
        SELECT userId, "Password", Nickname, Intro, Review, Provider,Profileimg,Birthday,Gender, "Type", Address, AddressDetail, Interests  FROM users WHERE userId = #{userId}
    </select>
</mapper>
